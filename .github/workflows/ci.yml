name: CI

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'
  schedule:
    # Use <https://crontab.guru> to conveniently edit cron schedule.
    - cron: '0 7 * * *' # At 07:00 UTC every day.

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install correct toolchain
        shell: bash
        run: |
          if [[ ${{ github.event_name }} == 'schedule' ]]; then
            RUST_TOOLCHAIN=nightly-$(curl -s https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu/miri)
          else
            RUST_TOOLCHAIN=$(cat rust-version)
          fi
          echo "Installing Rust version: $RUST_TOOLCHAIN"
          rustup default $RUST_TOOLCHAIN

      - name: Show Rust version
        run: |
          rustup show
          rustc -Vv
          cargo -V

      - name: Test
        run: bash ./ci.sh

  fmt:
    name: check formatting (ignored by bors)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            components: rustfmt
            default: true
      - name: Check formatting (miri)
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Check formatting (cargo-miri)
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path cargo-miri/Cargo.toml --all -- --check

  # These jobs doesn't actually test anything, but they're only used to tell
  # bors the build completed, as there is no practical way to detect when a
  # workflow is successful listening to webhooks only.
  #
  # ALL THE PREVIOUS JOBS NEED TO BE ADDED TO THE `needs` SECTION OF THIS JOB!
  # (`fmt` is deliberately not listed, we want bors to ignore it.)
  end-success:
    name: bors build finished
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event.pusher.name == 'bors' && success()
    steps:
      - name: mark the job as a success
        run: exit 0
  end-failure:
    name: bors build finished
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event.pusher.name == 'bors' && (failure() || cancelled())
    steps:
      - name: mark the job as a failure
        run: exit 1

  # Send a Zulip notification when a cron job fails
  cron-fail-notify:
    name: cronjob failure notification
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'schedule' && (failure() || cancelled())
    steps:
      - name: Install zulip-send
        run: pip3 install zulip
      - name: Send Zulip notification
        shell: bash
        env:
          ZULIP_BOT_EMAIL: ${{ secrets.ZULIP_BOT_EMAIL }}
          ZULIP_API_TOKEN: ${{ secrets.ZULIP_API_TOKEN }}
        run: |
          ~/.local/bin/zulip-send --stream miri --subject "Cron Job Failure $(date -uI)" \
            --message 'Dear @**RalfJ** and @**oli**

          It would appear that the Miri cron job build failed. Would you mind investigating this issue?

          Thanks in advance!
          Sincerely,
          The Miri Cronjobs Bot' \
            --user $ZULIP_BOT_EMAIL --api-key $ZULIP_API_TOKEN --site https://rust-lang.zulipchat.com
